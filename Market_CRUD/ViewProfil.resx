<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2ImageButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>